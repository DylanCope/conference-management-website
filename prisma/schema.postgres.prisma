generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          Int          @id @default(autoincrement())
  email       String       @unique
  isAdmin     Boolean      @default(false)
  createdAt   DateTime     @default(now())
  submissions Submission[]
}

model Conference {
  id                     Int          @id @default(autoincrement())
  name                   String
  website                String?
  abstractDeadline       DateTime
  fullSubmissionDeadline DateTime
  conferenceDate         DateTime
  createdAt              DateTime     @default(now())
  submissions            Submission[]
  processItems           ProcessItem[]
}

model Submission {
  id            Int         @id @default(autoincrement())
  title         String
  firstAuthors  String?
  seniorAuthors String?
  overleaf      String?
  user          User        @relation(fields: [userId], references: [id])
  userId        Int
  conference    Conference? @relation(fields: [conferenceId], references: [id])
  conferenceId  Int?
  createdAt     DateTime    @default(now())
  taskSubmissions TaskSubmission[]
}

model ProcessItem {
  id                    Int          @id @default(autoincrement())
  conference            Conference   @relation(fields: [conferenceId], references: [id])
  conferenceId          Int
  title                 String
  description           String?
  owner                 String?
  dueDaysBeforeAbstract Int?
  dueDate               DateTime?
  order                 Int          @default(0)
  createdAt             DateTime     @default(now())
  tasks                 Task[]
}

enum TaskType {
  FORM
  REVIEW
}

model Task {
  id            Int           @id @default(autoincrement())
  processItem   ProcessItem   @relation(fields: [processItemId], references: [id])
  processItemId Int
  type          TaskType
  order         Int           @default(0)
  createdAt     DateTime      @default(now())
  formQuestions FormQuestion[]
  submissions   TaskSubmission[]
}

enum QuestionType {
  SHORT
  PARAGRAPH
  MULTIPLE
  DROPDOWN
  DATE
}

model FormQuestion {
  id        Int           @id @default(autoincrement())
  task      Task          @relation(fields: [taskId], references: [id])
  taskId    Int
  type      QuestionType
  title     String
  required  Boolean       @default(false)
  order     Int           @default(0)
  options   FormOption[]
}

model FormOption {
  id         Int           @id @default(autoincrement())
  question   FormQuestion  @relation(fields: [questionId], references: [id])
  questionId Int
  text       String
  order      Int           @default(0)
}

model TaskSubmission {
  id           Int         @id @default(autoincrement())
  task         Task        @relation(fields: [taskId], references: [id])
  taskId       Int
  submission   Submission  @relation(fields: [submissionId], references: [id])
  submissionId Int
  answers      Json?
  completedAt  DateTime?
  createdAt    DateTime    @default(now())
  updatedAt    DateTime    @updatedAt

  @@unique([taskId, submissionId])
}
